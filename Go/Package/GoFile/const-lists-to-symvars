#!/usr/bin/env bash

## Go/Package/GoFile.const-lists-to-symvars
## Read all @const:* list files, create symvar for each constant declaration

main() {
    local file
    local line
    local -a vars
    local -a dw         ## var declaration split into words
    local BLANK='^\s*$'
    local VARLISTFILE='^@var:'
    local HAVECOMMA=','
    local -i i
    local inblock

    [[ -e %CONSTS ]] && rm %CONSTS

    ## @ORDER list file defines the element files for the target program
    while IFS= read -r file; do
        [[ $file == @const:* ]] || continue
        file=${file%% *}

        while IFS= read -r line; do 
            ## skip comments or blank lines:
            [[ $line == //* ]] && continue
            [[ $line == $'\t'//* ]] && continue
            [[ $line =~ $BLANK ]] && continue
            dw=($line) 
            [[ ${dw[0]} == const ]] && [[ ${dw[1]} == '(' ]] && inblock=1 && continue
            [[ ${dw[0]} == ')' ]] && inblock= && continue
            [[ $line == *\{ ]] && {
                warn "${0#*lib/} unable to handle const declarations which start a block"
                continue
            }

            name=
            if [[ -z $inblock ]]; then
                [[ ${dw[0]} == const ]] && {
                    ## declarations are complete, e.g., 'const name = value'
                    if [[ ${dw[2]} == '=' ]]; then
                        ## 'const name = value'
                        name=const:${dw[1]}
                    elif [[ ${dw[3]} == '=' ]]; then
                        ## 'const name type = value'
                        name=const:${dw[2]}:${dw[1]}
                    else
                        warn "${0#*lib/} unable to handle: $line"
                    fi
                }
            else
                ## const keyword is implied inside a const ( ... ) block
                if [[ ${dw[1]} == '=' ]]; then
                    ## 'name = value'
                    name=const:${dw[0]}
                elif [[ ${dw[2]} == '=' ]]; then
                    ## 'name type = value'
                    name=const:${dw[1]}:${dw[0]}
                else
                    warn "${0#*lib/} unable to handle $line"
                fi
            fi

            [[ -n $name ]] && {
                line="${line#$'\t'}"
                [[ $line != const* ]] && line="const $line"
                symvar -f $name "$line"
                printf "%s\t%s\n" $name $file >> %CONSTS
            }

            ## NOTE: not handling declarations with >1 const using commas

        done < "$file"
    done < @ORDER
}

main "$@"

